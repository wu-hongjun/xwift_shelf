from typing import *
from . import plogging as plogging, startup as startup
from typing import Any, Optional

moduleNameShortToLong: Any
moduleCommandAdditions: Any
secondaryFlags: Any
UI_COMMANDS: Any
nodeTypeToNodeCommand: Any
cmdlistOverrides: Any

def getInternalCmds(errorIfMissing: bool = ...): ...
def getCmdInfoBasic(command: Any): ...
def getCmdInfo(command: Any, version: Any, python: bool = ...): ...
def fixCodeExamples(style: str = ..., force: bool = ...): ...
def getModuleCommandList(category: Any, version: Optional[Any] = ...): ...
def getCallbackFlags(cmdInfo: Any): ...
def getModule(funcName: Any, knownModuleCmds: Any): ...
def cmdArgMakers(force: bool = ...): ...
def nodeCreationCmd(func: Any, nodeType: Any): ...
def testNodeCmd(funcName: Any, cmdInfo: Any, nodeCmd: bool = ..., verbose: bool = ...): ...

class CmdExamplesCache(startup.PymelCache):
    NAME: str = ...
    DESC: str = ...
    USE_VERSION: bool = ...

class CmdProcessedExamplesCache(CmdExamplesCache):
    USE_VERSION: bool = ...

class CmdDocsCache(startup.PymelCache):
    NAME: str = ...
    DESC: str = ...

class CmdCache(startup.SubItemCache):
    NAME: str = ...
    DESC: str = ...
    ITEM_TYPES: Any = ...
    nodeHierarchy: Any = ...
    uiClassList: Any = ...
    nodeCommandList: Any = ...
    moduleCmds: Any = ...
    def rebuild(self) -> None: ...
    def build(self): ...
    def fromRawData(self, data: Any): ...
    def toRawData(self, data: Any): ...
