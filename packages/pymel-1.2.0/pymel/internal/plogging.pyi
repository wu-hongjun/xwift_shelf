from logging import *
from logging import critical as critical, debug as debug, error as error, info as info, warning as warning
from maya.OpenMaya import MEventMessage as MEventMessage, MMessage as MMessage
from pymel.util.decoration import decorator as decorator
from typing import Any, Optional

PYMEL_CONF_ENV_VAR: str
PYMEL_LOGLEVEL_ENV_VAR: str
PYMEL_ERRORLEVEL_ENV_VAR: str

def getConfigFile(): ...
def getLogConfigFile(): ...
def pymelLogFileConfig(fname: Any, defaults: Optional[Any] = ..., disable_existing_loggers: bool = ...) -> None: ...

rootLogger: Any
pymelLogger: Any

def environLogLevelOverride(logger: Any) -> None: ...
def getLogger(name: Any): ...

logLevels: Any

def nameToLevel(name: Any): ...
def levelToName(level: Any): ...
def timed(level: Any = ...): ...

ERRORLEVEL: Any
ERRORLEVEL_DEFAULT: Any

def errorLevel(): ...
def raiseLog(logger: Any, level: Any, message: Any, errorClass: Any = ..., reraise: bool = ...) -> None: ...
def addErrorLog(logger: Any): ...
